name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node for backend/frontend builds
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3. Backend test build
      - name: Install & test backend
        working-directory: backend
        run: |
          npm install
          npm run test --if-present

      # 4. Frontend test build
      - name: Install & build frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      # 5. Login to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Build & push Docker images
      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-backend:latest ./backend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-frontend:latest ./frontend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-db:latest ./db
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/three-tier-db:latest

      # 7. Deploy to Ubuntu server (via SSH)
      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/three_tier_project
            git pull origin main
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --build


